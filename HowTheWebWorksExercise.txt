How Web Works Exercise
Part One: Solidify Terminology

•What is HTTP?
	Hypertext Transfer Protocol. HTTP is a set of rules that’s how the browsers and servers communicate with each other and transfer data between them.


•What is a URL?
	Uniform Resource Locator. URL is an address (a reference) for a internet resource.


•What is DNS?
	Domain Name System. DNS is a system that takes URLs(domain names) and turns them into IP addresses so browsers can load internet resources.


•What is a query string?
	A query string is a part of a uniform resource locator (URL) that assigns values to specified parameters. (?key1=value1&key2=value2...)


•What are two HTTP verbs and how are they different?
	GET: requests without side effects (ie, don’t change server data). arguments are passed along in query string.

	POST: requests with side effects (ie, change data on server). arguments sent as body of the request (not in query string).


•What is an HTTP request?
	An HTTP request is a request sent from a client to a server which follows the HTTP protocol (a request for HTML).


•What is an HTTP response?
	An HTTP response is a response from a server to a client which follows the HTTP protocol (sending back HTML/CSS/JS/etc).


•What is an HTTP header? Give a couple examples of request and response headers you have seen.
    Headers provide additional information about the request or the response.

       Examples:
       Request headers: Hostname, User-Agent, Accept, Cookie, Cache-Control
       Response headers: Content-Type, Last-Modified, Set-Cookie, Cache-Control



•What are the processes that happen when you type “http://somesite.com/some/page.html” into a browser?

1. Browser converts the name into an IP address via DNS.

2. Browser makes a request to that IP address, including headers (info about browser,   any previous cookies, and other things)

3. The server sends a response (typically, HTML, with a status code (200 if successful or 404 Not Found or etc)

4. The browser makes a DOM from that HTML, and finds any other resources needed (images, CSS, JavaScript, etc)

5. The browser makes separate HTTP requests for those resources and receives response from the server for each





